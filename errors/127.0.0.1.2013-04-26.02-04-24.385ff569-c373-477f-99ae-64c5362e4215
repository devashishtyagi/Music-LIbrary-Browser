(dp1
S'output'
p2
S'<class \'psycopg2.ProgrammingError\'> column "rating" does not exist\nLINE 1: ...here id = (select id from top_release_group where rating = (...\n                                                             ^\nQUERY:  delete from top_release_group where id = (select id from top_release_group where rating = (select min(rating) from top_release_group) limit 1)\nand new.rating > (select min(rating) from top_release_group)\nCONTEXT:  PL/pgSQL function "func3" line 3 at SQL statement\nSQL statement "update release_group_rating_global\nset rating = rating + new.rating - old.rating\nwhere id = new.id"\nPL/pgSQL function "func2" line 3 at SQL statement\n'
p3
sS'layer'
p4
S'/home/www-data/web2py/applications/musicbrainz/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a deafult controller\n## - index is the default action controller. Performs the search functionality\n## - album is used to render the release group page\n## - artist is used to render the artist information page\n## - release is used to render the information about a single release\n## - playlist allows the user to add or delete playlists\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\nimport datetime\nimport httplib\nimport pprint\nimport json\nimport urllib2, urllib\nfrom bs4 import BeautifulSoup\nimport csv\nimport os, stat\nfrom gluon.debug import dbg\n\n########### GETTING IMAGE LINK FOR MBID #############\ndef get_link(destination):\n\ttry:\n\t\tproxy = urllib2.ProxyHandler({\'http\': \'http://cs5090240:phone01202767129@10.10.78.62:3128\'})\n\t\tauthentication = urllib2.HTTPBasicAuthHandler()\n\t\topener = urllib2.build_opener(proxy, authentication, urllib2.HTTPHandler)\n\t\turllib2.install_opener(opener)\n\t\treq = urllib2.Request(url=destination,data="")\n\t\tf = urllib2.urlopen(req)\n\t\tdata =json.load(f)\n\t\tcoverarturl = data[\'images\'][0][\'thumbnails\'][\'small\']\n\texcept:\n\t\tcoverarturl = URL(\'static\',\'images/no_image_found.jpg\')\n\treturn coverarturl\n\ndef get_wiki_desc(url):\n\ttry:\n\t\tproxy = urllib2.ProxyHandler({\'http\': \'http://cs5090240:phone01202767129@10.10.78.62:3128\'})\n\t\tauth = urllib2.HTTPBasicAuthHandler()\n\t\topener = urllib2.build_opener(proxy, auth, urllib2.HTTPHandler)\n\t\turllib2.install_opener(opener)\n\n\t\treq = urllib2.Request(url, headers={\'User-Agent\' : "Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11)Gecko/20071127 Firefox/2.0.0.11"}) \n\t\tconn = urllib2.urlopen( req )\n\n\t\tdata = conn.read()\n\t\tsoup = BeautifulSoup(data)\n\t\tdic= soup.findAll(\'p\')\n\t\tk=dic[0]\n\t\tfor item in dic:\n\t\t\tif(len(item)<15):\n\t\t\t\tcontinue\n\t\t\telse:\n\t\t\t\tk=item\n\t\t\t\tbreak\n\t\treturn k\n\texcept:\n\t\treturn "No wiki description"\n\n\n########### INDEX CONTROLLER ##############\ndef index():\n\t"""\n\tInitializes reponse variables.\n\tShow the search bar which enables the user to search for music, artists,\n\talbums and records. On clicking the search tab, the user will be redirected\n\tto search action.\n\tThis page also displays featured artists, albums, music.\n\t"""\n\tform = FORM(\'\',\n\t\t\t\tINPUT(_name=\'search_term\', requires = IS_NOT_EMPTY(), _class=\'input-large search-query\', \n\t\t\t\t\t_placeholder=\'Search for music\', _autocomplete="off"),\n\t\t\t\tINPUT(_type=\'submit\', _class=\'btn\', _value=\'Search\'), _class=\'form-search\')\n\tif form.process().accepted:\n\t\tredirect(URL(\'search\', vars=dict(search_term=request.vars.search_term)))\n\tfeatured_albums = db.executesql("select * from top_release_group;")\n\tgroupinfo = []\n\timagelink = []\n\tfor row in featured_albums:\n\t\tgroupinfo.append(row[0])\n\t\tif (row[2]):\n\t\t\timagelink.append(row[2])\n\t\telse:\n\t\t\timageurl = get_link("http://www.coverartarchive.org/release-group/"+row[1]);\n\t\t\tdb.executesql("update top_release_group set url = \'"+str(imageurl)+"\' where id="+str(row[0])+";")\n\t\t\timagelink.append(imageurl)\n\treturn dict(form=form, groupinfo=groupinfo, imagelink=imagelink)\n\n########### SEARCH CONTROLLER ##############\ndef search():\n\t"""\n\tReturns search results of the query obtained in request args. It Returns\n\tfour seperate variables containing results for artists, music, albums and\n\trecords.\n\t"""\n\tif not request.vars.search_term:\n\t\tredirect(URL(\'index\'))\n\tterm = request.vars.search_term\n\torigterm = term\n\tterm = term.replace(\' \',\'|\')\n\tartists = db.executesql("select distinct(m1.id), m1.art_name, m1.artist_type, m1.country, m1.b_year,m1.b_month,m1.b_date,m1.e_year,m1.e_month,m1.e_day,ts_rank(to_tsvector(m1.art_name),to_tsquery(\'"+term+"\')) rank from art_info m1 where to_tsvector(\'english\',m1.art_name) @@ to_tsquery(\'"+term+"\') order by rank desc limit 20;")\n\talbums = db.executesql("select distinct(m1.id),m2.name,m1.art_id,m1.art_name,m1.rel_type,m1.count,ts_rank(to_tsvector(m2.name),to_tsquery(\'"+term+"\')) rank from rel_art m1, release_name m2, release_group m3 where m3.name = m2.id and m3.id = m1.id and to_tsvector(\'english\',m2.name) @@ to_tsquery(\'"+term+"\') order by rank desc limit 20;")\n\tsongs = db.executesql("select m2.id, m1.name, m3.art_id, m3.art_name, m3.rel_id, m3.rel_name from track_name m1, recording m2, rec_rel_art m3 where m1.id = m2.name and m2.id = m3.rec_id and lower(m1.name) LIKE lower(\'%%"+origterm+"%%\') limit 20;")\n\treturn dict(songs=songs, albums=albums, artists=artists)\n\n########### ALBUM CONTROLLER ##############\ndef album():\n\t"""\n\tThis action is responsible for obtaining and returning all the information \n\trelated to a particular release group item. \n\t"""\n\tif not request.vars.id:\n\t\tredirect(URL(\'index\'))\n\tid = request.vars.id\n\treleasegroupname = db.executesql("select m1.name, m2.id from release_name as m1, release_group as m2 where m1.id = m2.name and m2.id = "+id+";")\n\treleasegroup = db.executesql("select distinct(m2.id),m3.name,m5.name,m7.track_count,m2.date_year,m2.date_month,m2.date_day,m6.name,m2.barcode from release_group m1,release m2,release_name m3,medium m4,medium_format m5, country m6, tracklist m7 where m5.id = m4.format and m4.release = m2.id and m2.name = m3.id and m2.release_group = m1.id and m2.country = m6.id and m4.tracklist = m7.id and m1.id = "+id+";")\n\turls = db.executesql("select m2.url from l_release_group_url m1, url m2 where m1.entity1 = m2.id and m1.entity0 = "+id+";")\n\tmbid = db.executesql("select m1.gid from release_group m1 where m1.id = "+id+";")\n\trating = db.executesql("select rating, count from release_group_rating_global where id = "+id+";")\n\tavg_rating = float(rating[0][0])/float(rating[0][1])\n\tif auth.user:\n\t\turating = db.executesql("select rating from release_group_rating_local where id = "+str(id)+" and user_id = "+str(auth.user.id)+";")\n\t\tif urating:\n\t\t\tuser_rating = urating[0][0]\n\t\telse:\n\t\t\tuser_rating = 0\n\telse:\n\t\tuser_rating = 0\n\ttry:\n\t\tproxy = urllib2.ProxyHandler({\'http\': \'http://cs5090240:phone01202767129@10.10.78.62:3128\'})\n\t\tauthentication = urllib2.HTTPBasicAuthHandler()\n\t\topener = urllib2.build_opener(proxy, authentication, urllib2.HTTPHandler)\n\t\turllib2.install_opener(opener)\n\t\tdestination = \'http://www.coverartarchive.org/release-group/\'+mbid[0][0]\n\t\t#dbg.set_trace()\n\t\treq = urllib2.Request(url=destination,data="")\n\t\tf = urllib2.urlopen(req)\n\t\t#dbg.set_trace()\n\t\tdata =json.load(f)\n\t\t#dbg.set_trace()\n\t\tcoverarturl = data[\'images\'][0][\'image\']\n\texcept:\n\t\tcoverarturl = URL(\'static\',\'images/no_image_found.jpg\')\n\tlinks = []\n\twikiurl = ""\n\tfor url in urls:\n\t\tif "wikipedia" in url[0]:\n\t\t\twikiurl = url[0]\n\t\telse:\n\t\t\tlinks.append(url[0])\n\tif wikiurl:\n\t\t#wiki = get_wiki_desc(str(wikiurl)+"?printable=yes")\n\t\twiki = "Description available at "+str(wikiurl)\n\telse:\n\t\twiki = "No wiki description"\n\treturn dict(releasegroupname=releasegroupname, releasegroup=releasegroup, links=links, wiki=wiki, wikiurl=wikiurl, coverarturl=coverarturl, avg_rating=avg_rating, user_rating=user_rating)\n\n########### RELEASE CONTROLLER ##############\ndef release():\n\t"""\n\tThis action is reponsible  for displaying the displaying the tracklist\n\tof a particular release\n\t"""\n\tif not request.vars.id:\n\t\tredirect(URL(\'index\'))\n\tid = request.vars.id\n\treleasename = db.executesql("select m1.name from release_name as m1, release as m2 where m1.id = m2.name and m2.id = "+id+";")\n\ttracklist = db.executesql("select m4.id, m5.name, m4.position, m4.length from release m1,medium m2,tracklist m3,track m4,track_name m5 where m5.id = m4.name and m4.tracklist = m3.id and m3.id = m2.tracklist and m2.release = m1.id and m1.id = "+id+" order by m4.position;")\n\turls = db.executesql("select m2.url from l_release_url m1, url m2 where m1.entity1 = m2.id and m1.entity0 = "+id+";")\n\tmbid = db.executesql("select m1.gid from release m1 where m1.id = "+id+";")\n\ttry:\n\t\tproxy = urllib2.ProxyHandler({\'http\': \'http://cs5090240:phone01202767129@10.10.78.62:3128\'})\n\t\tauthentication = urllib2.HTTPBasicAuthHandler()\n\t\topener = urllib2.build_opener(proxy, authentication, urllib2.HTTPHandler)\n\t\turllib2.install_opener(opener)\n\t\tdestination = \'http://www.coverartarchive.org/release/\'+mbid[0][0]\n\t\t#dbg.set_trace()\n\t\treq = urllib2.Request(url=destination,data="")\n\t\tf = urllib2.urlopen(req)\n\t\t#dbg.set_trace()\n\t\tdata =json.load(f)\n\t\t#dbg.set_trace()\n\t\tcoverarturl = data[\'images\'][0][\'image\']\n\texcept:\n\t\tcoverarturl = URL(\'static\',\'images/no_image_found.jpg\')\n\tlinks = []\n\twiki = ""\n\tfor url in urls:\n\t\tif "wikipedia" in url[0]:\n\t\t\twiki = url[0]\n\t\telse:\n\t\t\tlinks.append(url[0])\n\ttracklist1 = []\n\tfor row in tracklist:\n\t\trow1 = list(row)\n\t\tif (row1[3]):\n\t\t\td = datetime.datetime.fromtimestamp(int(row1[3])//1000)\n\t\t\trow1[3] = str(d.hour)+":"+str(d.minute)\n\t\telse:\n\t\t\trow1[3] = \'N/A\'\n\t\ttracklist1.append(row1)\n\tif auth.user:\n\t\tplaylists = db(db.playlists.user_id == auth.user.id).select()\n\telse:\n\t\tplaylists = None\n\treturn dict(tracklist=tracklist1, releasename=releasename, wiki=wiki, links=links, playlists=playlists, coverarturl=coverarturl)\n\n########### ARTIST CONTROLLER ##############\ndef artist():\n\t"""\n\tThis action is reponsible for displaying all the information related \n\tto an artist\n\t"""\n\tif not request.vars.id:\n\t\tredirect(URL(\'index\'))\n\tid = request.vars.id\n\tartistname = db.executesql("select m1.name from artist_name as m1, artist as m2 where m1.id = m2.name and m2.id = "+id+";")\n\turls = db.executesql("select distinct(m2.url) from l_artist_url m1, url m2 where m2.id = m1.entity1 and m1.entity0 = "+id+";")\n\tdiscography = db.executesql("select m4.name,m5.name,m3.id,m6.count from artist_credit_name m1, artist_credit m2,release_group m3,release_name m4, release_group_primary_type m5,rel_group_count m6 where m4.id = m3.name and m3.artist_credit = m2.id and m2.id = m1.artist_credit and m5.id = m3.type and m6.id = m3.id and m1.artist = "+id+";")\n\tlinks = []\n\twiki = ""\n\tfor url in urls:\n\t\tif "wikipedia" in url[0]:\n\t\t\twiki = url[0]\n\t\telse:\n\t\t\tlinks.append(url[0])\n\treturn dict(discography=discography, wiki=wiki, links=links, artistname=artistname)\n\n########### PLAYLIST CONTROLLER ##############\n@auth.requires_login()\ndef playlist():\n\tdb.playlists.user_id.default = auth.user.id\n\tform =  SQLFORM(db.playlists, labels={\'name\':\'Name\', \'description\':\'Description\', \'submit\':\'Add Playlist\'})\n\tif form.process().accepted:\n\t\tresponse.flash = \'Your playlists has been added.\'\n\tplaylists = db(db.playlists.user_id == auth.user.id).select()\n\treturn dict(playlists=playlists, form=form)\n\n########### DELETE PLAYLIST ################\n@auth.requires_login()\ndef deleteplaylist():\n\tif request.vars.id:\n\t\tdb(db.playlists.id == request.vars.id).delete()\n\treturn dict()\n\n########## ADD TO PLAYLIST ################\n@auth.requires_login()\ndef addtoplaylist():\n\tif request.vars:\n\t\tplaylistid = str(request.vars.playlistid)\n\t\ttrackid = str(request.vars.trackid)\n\t\tif not db.executesql("SELECT * FROM playlist_track where playlist_id="+playlistid+" AND track_id="+trackid+";"):\n\t\t\tdb.executesql("INSERT INTO playlist_track VALUES(" + playlistid + "," + trackid + ");")\n\treturn dict()\n\n########## PLAYLIST HOME ################\ndef playlisthome():\n\tif not request.vars.id:\n\t\tredirect(URL(\'index\'))\n\tid = request.vars.id\n\trecordings = db.executesql("select pr.playlist_id, pr.track_id, tn.name from playlist_track as pr, track as tk, track_name as tn where pr.playlist_id = "+id+" AND pr.track_id = tk.id AND tk.name = tn.id;")\n\tplaylist_info = db.executesql("select * from playlists where id = "+id+";")\n\treturn dict(recordings=recordings, playlist_info=playlist_info);\n\n########## DELETE TRACK FROM PLAYLIST ###########\ndef delete_track_from_playlist():\n\tif not (request.vars.pid and request.vars.tid):\n\t\tredirect(URL(\'index\'))\n\tpid = request.vars.pid\n\ttid = request.vars.tid\n\tdb.executesql("DELETE FROM playlist_track WHERE playlist_id="+pid+" AND track_id="+tid+";")\n\treturn dict()\n\n########## MODIFY USER RATINGS ##############\ndef modifyreleasegrouprating():\n\tif not (request.vars.rgid and request.vars.uid and request.vars.score):\n\t\tredirect(URL(\'index\'))\n\trgid = request.vars.rgid\n\tuid = request.vars.uid\n\tscore = request.vars.score\n\tif not db.executesql("select * from release_group_rating_local where id = "+rgid+" and user_id = "+uid+";"):\n\t\tdb.executesql("insert into release_group_rating_local values("+rgid+","+uid+","+score+");")\n\telse:\n\t\tdb.executesql("update release_group_rating_local set rating = "+score+" where id = "+rgid+" and user_id = "+uid+";")\n\treturn dict()\n\n########## EXPORT PLAYLIST TO CSV ############\ndef export():\n\tif not request.vars.id:\n\t\tredirect(URL(\'index\'))\n\tid = request.vars.id\n\trecordings = db.executesql("select pr.track_id, tn.name from playlist_track as pr, track as tk, track_name as tn where pr.playlist_id = "+id+" AND pr.track_id = tk.id AND tk.name = tn.id;")\n\tfilename = "plalist_id"+str(id)+".csv"\n\twith open(os.path.join(request.folder,\'uploads\',filename), "wb") as csvfile:\n\t\tcsvwriter = csv.writer(csvfile)\n\t\tfor row in recordings:\n\t\t\tcsvwriter.writerow([str(row[0]), str(row[1])])\n\tresponse.stream(os.path.join(request.folder,\'uploads\',filename))\n\n\ndef user():\n\t"""\n\texposes:\n\thttp://..../[app]/default/user/login\n\thttp://..../[app]/default/user/logout\n\thttp://..../[app]/default/user/register\n\thttp://..../[app]/default/user/profile\n\thttp://..../[app]/default/user/retrieve_password\n\thttp://..../[app]/default/user/change_password\n\tuse @auth.requires_login()\n\t\t@auth.requires_membership(\'group name\')\n\t\t@auth.requires_permission(\'read\',\'table name\',record_id)\n\tto decorate functions that need access control\n\t"""\n\treturn dict(form=auth())\n\n\ndef download():\n\t"""\n\tallows downloading of uploaded files\n\thttp://..../[app]/default/download/[filename]\n\t"""\n\treturn response.download(request, db)\n\n\ndef call():\n\t"""\n\texposes services. for example:\n\thttp://..../[app]/default/call/jsonrpc\n\tdecorate with @services.jsonrpc the functions to expose\n\tsupports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n\t"""\n\treturn service()\n\n\n@auth.requires_signature()\ndef data():\n\t"""\n\thttp://..../[app]/default/data/tables\n\thttp://..../[app]/default/data/create/[table]\n\thttp://..../[app]/default/data/read/[table]/[id]\n\thttp://..../[app]/default/data/update/[table]/[id]\n\thttp://..../[app]/default/data/delete/[table]/[id]\n\thttp://..../[app]/default/data/select/[table]\n\thttp://..../[app]/default/data/search/[table]\n\tbut URLs must be signed, i.e. linked with\n\t  A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n\tor with the signed load operator\n\t  LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n\t"""\n\treturn dict(form=crud())\n\nresponse._vars=response._caller(modifyreleasegrouprating)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'psycopg2'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of ProgrammingError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of ProgrammingError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of ProgrammingError object>'
p19
sS'__dict__'
p20
S'{\'cursor\': <cursor object at 0xaba833ec; closed: 0>, \'pgcode\': \'42703\', \'pgerror\': \'ERROR:  column "rating" does not exist\\nLINE 1: ....L/pgSQL function "func2" line 3 at SQL statement\\n\'}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of ProgrammingError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of ProgrammingError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of ProgrammingError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of ProgrammingError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of ProgrammingError object>'
p35
sS'__class__'
p36
S"<class 'psycopg2.ProgrammingError'>"
p37
sS'pgerror'
p38
S'\'ERROR:  column "rating" does not exist\\nLINE 1: ....L/pgSQL function "func2" line 3 at SQL statement\\n\''
p39
sS'__doc__'
p40
S"'Error related to database programming (SQL error, table not found etc).'"
p41
sS'__getitem__'
p42
S"<method-wrapper '__getitem__' of ProgrammingError object>"
p43
sS'__setstate__'
p44
S'<built-in method __setstate__ of ProgrammingError object>'
p45
sS'__getattribute__'
p46
S"<method-wrapper '__getattribute__' of ProgrammingError object>"
p47
sS'args'
p48
S'(\'column "rating" does not exist\\nLINE 1: ...here i...L/pgSQL function "func2" line 3 at SQL statement\\n\',)'
p49
sS'__subclasshook__'
p50
S'<built-in method __subclasshook__ of type object>'
p51
sS'pgcode'
p52
S"'42703'"
p53
sS'__unicode__'
p54
S'<built-in method __unicode__ of ProgrammingError object>'
p55
sS'cursor'
p56
S'<cursor object at 0xaba833ec; closed: 0>'
p57
sS'__delattr__'
p58
S"<method-wrapper '__delattr__' of ProgrammingError object>"
p59
sS'__repr__'
p60
S"<method-wrapper '__repr__' of ProgrammingError object>"
p61
sS'__hash__'
p62
S"<method-wrapper '__hash__' of ProgrammingError object>"
p63
ssS'evalue'
p64
S'column "rating" does not exist\nLINE 1: ...here id = (select id from top_release_group where rating = (...\n                                                             ^\nQUERY:  delete from top_release_group where id = (select id from top_release_group where rating = (select min(rating) from top_release_group) limit 1)\nand new.rating > (select min(rating) from top_release_group)\nCONTEXT:  PL/pgSQL function "func3" line 3 at SQL statement\nSQL statement "update release_group_rating_global\nset rating = rating + new.rating - old.rating\nwhere id = new.id"\nPL/pgSQL function "func2" line 3 at SQL statement\n'
p65
sS'request'
p66
cgluon.html
XML_unpickle
p67
(S's\x0c]\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top">ajax</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">application</td><td valign="top">:</td><td><div>musicbrainz</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">args</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">body</td><td valign="top">:</td><td><div>&lt;open file &#x27;&lt;fdopen&gt;&#x27;, mode &#x27;w+b&#x27; at 0xaba686a8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cid</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">client</td><td valign="top">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">controller</td><td valign="top">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cookies</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">session_id_musicbrainz</td><td valign="top">:</td><td><div>127.0.0.1-cef46f10-7fe3-4161-8f04-f260945a4b1b<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id_welcome</td><td valign="top">:</td><td><div>127.0.0.1-e1408a92-effc-4d3d-8689-b5cbff09efa4<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">env</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">app_folders</td><td valign="top">:</td><td><div>set([&#x27;/home/www-data/web2py/applications/welcome/&#x27;, &#x27;/home/www-data/web2py/applications/musicbrainz/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">applications_parent</td><td valign="top">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">content_length</td><td valign="top">:</td><td><div>25</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">content_type</td><td valign="top">:</td><td><div>application/x-www-form-urlencoded; charset=UTF-8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">db_sessions</td><td valign="top">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">debugging</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">document_root</td><td valign="top">:</td><td><div>/etc/apache2/htdocs</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">gateway_interface</td><td valign="top">:</td><td><div>CGI/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">gluon_parent</td><td valign="top">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept</td><td valign="top">:</td><td><div>*/*</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept_charset</td><td valign="top">:</td><td><div>ISO-8859-1,utf-8;q=0.7,*;q=0.3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept_encoding</td><td valign="top">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept_language</td><td valign="top">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_connection</td><td valign="top">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_cookie</td><td valign="top">:</td><td><div>session_id_welcome=127.0.0.1-e1408a92-effc-4d3d-8689-b5cbff09efa4; session_id_musicbrainz=127.0.0.1-cef46f10-7fe3-4161-8f04-f260945a4b1b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_host</td><td valign="top">:</td><td><div>localhost</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_origin</td><td valign="top">:</td><td><div>http://localhost</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_referer</td><td valign="top">:</td><td><div>http://localhost/musicbrainz/default/album?id=331825</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_user_agent</td><td valign="top">:</td><td><div>Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.52 Safari/537.17</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_x_requested_with</td><td valign="top">:</td><td><div>XMLHttpRequest</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_jython</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_pypy</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">local_hosts</td><td valign="top">:</td><td><div><table><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>localhost</div></td></tr><tr><td><div>pong</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi_application_group</td><td valign="top">:</td><td><div>127.0.1.1|</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi_callable_object</td><td valign="top">:</td><td><div>application</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi_handler_script</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi_input_chunked</td><td valign="top">:</td><td><div>0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi_listener_host</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi_listener_port</td><td valign="top">:</td><td><div>80</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi_process_group</td><td valign="top">:</td><td><div>web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi_request_handler</td><td valign="top">:</td><td><div>wsgi-script</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi_script_reloading</td><td valign="top">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi_version</td><td valign="top">:</td><td><div><table><tr><td><div>3</div></td></tr><tr><td><div>3</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path_info</td><td valign="top">:</td><td><div>/musicbrainz/default/modifyreleasegrouprating</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path_translated</td><td valign="top">:</td><td><div>/home/www-data/web2py/wsgihandler.py/musicbrainz/default/modifyreleasegrouprating</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">query_string</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">remote_addr</td><td valign="top">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">remote_port</td><td valign="top">:</td><td><div>51792</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">request_method</td><td valign="top">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">request_uri</td><td valign="top">:</td><td><div>/musicbrainz/default/modifyreleasegrouprating</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">script_filename</td><td valign="top">:</td><td><div>/home/www-data/web2py/wsgihandler.py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">script_name</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_addr</td><td valign="top">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_admin</td><td valign="top">:</td><td><div>[no address given]</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_name</td><td valign="top">:</td><td><div>localhost</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_port</td><td valign="top">:</td><td><div>80</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_protocol</td><td valign="top">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_signature</td><td valign="top">:</td><td><div>&lt;address&gt;Apache/2.2.22 (Ubuntu) Server at localhost Port 80&lt;/address&gt;\n</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_software</td><td valign="top">:</td><td><div>Apache/2.2.22 (Ubuntu)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_path</td><td valign="top">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_version</td><td valign="top">:</td><td><div>2.4.6-stable+timestamp.2013.04.06.17.37.38</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_errors</td><td valign="top">:</td><td><div>&lt;mod_wsgi.Log object at 0xaba927f0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_file_wrapper</td><td valign="top">:</td><td><div>&lt;built-in method file_wrapper of mod_wsgi.Adapter object at 0xaba74f98&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_input</td><td valign="top">:</td><td><div>&lt;mod_wsgi.Input object at 0xaba92728&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_multiprocess</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_multithread</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_run_once</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_url_scheme</td><td valign="top">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_version</td><td valign="top">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>1</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">extension</td><td valign="top">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">folder</td><td valign="top">:</td><td><div>/home/www-data/web2py/applications/musicbrainz/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">function</td><td valign="top">:</td><td><div>modifyreleasegrouprating</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">get_vars</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">global_settings</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">app_folders</td><td valign="top">:</td><td><div>set([&#x27;/home/www-data/web2py/applications/welcome/&#x27;, &#x27;/home/www-data/web2py/applications/musicbrainz/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">applications_parent</td><td valign="top">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">db_sessions</td><td valign="top">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">debugging</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">gluon_parent</td><td valign="top">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_jython</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_pypy</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">local_hosts</td><td valign="top">:</td><td><div><table><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>localhost</div></td></tr><tr><td><div>pong</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_version</td><td valign="top">:</td><td><div>2.4.6-stable+timestamp.2013.04.06.17.37.38</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_https</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_local</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_restful</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">now</td><td valign="top">:</td><td><div>datetime.datetime(2013, 4, 26, 2, 4, 24, 953967)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">post_vars</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">rgid</td><td valign="top">:</td><td><div>331825</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">score</td><td valign="top">:</td><td><div>2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">uid</td><td valign="top">:</td><td><div>1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">raw_args</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">raw_extension</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">url</td><td valign="top">:</td><td><div>/musicbrainz/default/modifyreleasegrouprating</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">utcnow</td><td valign="top">:</td><td><div>datetime.datetime(2013, 4, 25, 20, 34, 24, 953996)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">uuid</td><td valign="top">:</td><td><div>musicbrainz/127.0.0.1.2013-04-26.02-04-24.385ff569-c373-477f-99ae-64c5362e4215</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">vars</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">rgid</td><td valign="top">:</td><td><div>331825</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">score</td><td valign="top">:</td><td><div>2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">uid</td><td valign="top">:</td><td><div>1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">environ</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">CONTENT_LENGTH</td><td valign="top">:</td><td><div>25</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">CONTENT_TYPE</td><td valign="top">:</td><td><div>application/x-www-form-urlencoded; charset=UTF-8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">DOCUMENT_ROOT</td><td valign="top">:</td><td><div>/etc/apache2/htdocs</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">GATEWAY_INTERFACE</td><td valign="top">:</td><td><div>CGI/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT</td><td valign="top">:</td><td><div>*/*</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT_CHARSET</td><td valign="top">:</td><td><div>ISO-8859-1,utf-8;q=0.7,*;q=0.3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT_ENCODING</td><td valign="top">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT_LANGUAGE</td><td valign="top">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_CONNECTION</td><td valign="top">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_COOKIE</td><td valign="top">:</td><td><div>session_id_welcome=127.0.0.1-e1408a92-effc-4d3d-8689-b5cbff09efa4; session_id_musicbrainz=127.0.0.1-cef46f10-7fe3-4161-8f04-f260945a4b1b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_HOST</td><td valign="top">:</td><td><div>localhost</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ORIGIN</td><td valign="top">:</td><td><div>http://localhost</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_REFERER</td><td valign="top">:</td><td><div>http://localhost/musicbrainz/default/album?id=331825</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_USER_AGENT</td><td valign="top">:</td><td><div>Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.52 Safari/537.17</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_X_REQUESTED_WITH</td><td valign="top">:</td><td><div>XMLHttpRequest</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">PATH_INFO</td><td valign="top">:</td><td><div>/musicbrainz/default/modifyreleasegrouprating</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">PATH_TRANSLATED</td><td valign="top">:</td><td><div>/home/www-data/web2py/wsgihandler.py/musicbrainz/default/modifyreleasegrouprating</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">QUERY_STRING</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REMOTE_ADDR</td><td valign="top">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REMOTE_PORT</td><td valign="top">:</td><td><div>51792</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REQUEST_METHOD</td><td valign="top">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REQUEST_URI</td><td valign="top">:</td><td><div>/musicbrainz/default/modifyreleasegrouprating</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SCRIPT_FILENAME</td><td valign="top">:</td><td><div>/home/www-data/web2py/wsgihandler.py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SCRIPT_NAME</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_ADDR</td><td valign="top">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_ADMIN</td><td valign="top">:</td><td><div>[no address given]</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_NAME</td><td valign="top">:</td><td><div>localhost</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_PORT</td><td valign="top">:</td><td><div>80</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_PROTOCOL</td><td valign="top">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_SIGNATURE</td><td valign="top">:</td><td><div>&lt;address&gt;Apache/2.2.22 (Ubuntu) Server at localhost Port 80&lt;/address&gt;\n</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_SOFTWARE</td><td valign="top">:</td><td><div>Apache/2.2.22 (Ubuntu)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi.application_group</td><td valign="top">:</td><td><div>127.0.1.1|</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi.callable_object</td><td valign="top">:</td><td><div>application</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi.handler_script</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi.input_chunked</td><td valign="top">:</td><td><div>0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi.listener_host</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi.listener_port</td><td valign="top">:</td><td><div>80</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi.process_group</td><td valign="top">:</td><td><div>web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi.request_handler</td><td valign="top">:</td><td><div>wsgi-script</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi.script_reloading</td><td valign="top">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">mod_wsgi.version</td><td valign="top">:</td><td><div><table><tr><td><div>3</div></td></tr><tr><td><div>3</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.errors</td><td valign="top">:</td><td><div>&lt;mod_wsgi.Log object at 0xaba927f0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.file_wrapper</td><td valign="top">:</td><td><div>&lt;built-in method file_wrapper of mod_wsgi.Adapter object at 0xaba74f98&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.input</td><td valign="top">:</td><td><div>&lt;open file &#x27;&lt;fdopen&gt;&#x27;, mode &#x27;w+b&#x27; at 0xaba686a8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.multiprocess</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.multithread</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.run_once</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.url_scheme</td><td valign="top">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.version</td><td valign="top">:</td><td><div>1</div></td></tr></table></div></td></tr></table></div></td></tr></table></div>'
tRp68
sS'frames'
p69
(lp70
(dp71
S'file'
p72
S'/home/www-data/web2py/gluon/restricted.py'
p73
sS'dump'
p74
(dp75
S'environment'
p76
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'BeautifulSoup': <class 'bs4.BeautifulSoup'>, 'CAT': <class 'gluon.html.CAT'>, ...}"
p77
sS'ccode'
p78
S'<code object <module> at 0xaded77b8, file "/home...ons/musicbrainz/controllers/default.py", line 16>'
p79
ssS'lnum'
p80
I212
sS'lines'
p81
(dp82
I207
S'    try:'
p83
sI208
S'        if isinstance(code, types.CodeType):'
p84
sI209
S'            ccode = code'
p85
sI210
S'        else:'
p86
sI211
S'            ccode = compile2(code, layer)'
p87
sI212
S'        exec ccode in environment'
p88
sI213
S'    except HTTP:'
p89
sI214
S'        raise'
p90
sI215
S'    except RestrictedError:'
p91
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p92
ssS'call'
p93
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ..._vars=response._caller(modifyreleasegrouprating)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'BeautifulSoup': <class 'bs4.BeautifulSoup'>, 'CAT': <class 'gluon.html.CAT'>, ...}, layer='/home/www-data/web2py/applications/musicbrainz/controllers/default.py')"
p94
sS'func'
p95
S'restricted'
p96
sa(dp97
g72
S'/home/www-data/web2py/applications/musicbrainz/controllers/default.py'
p98
sg74
(dp99
sg80
I358
sg81
(dp100
I352
S"\t  A('table',_href=URL('data/tables',user_signature=True))"
p101
sI353
S'\tor with the signed load operator'
p102
sI354
S"\t  LOAD('default','data.load',args='tables',ajax=True,user_signature=True)"
p103
sI355
S'\t"""'
p104
sI356
S'\treturn dict(form=crud())'
p105
sI347
S'\thttp://..../[app]/default/data/update/[table]/[id]'
p106
sI348
S'\thttp://..../[app]/default/data/delete/[table]/[id]'
p107
sI349
S'\thttp://..../[app]/default/data/select/[table]'
p108
sI350
S'\thttp://..../[app]/default/data/search/[table]'
p109
sI351
S'\tbut URLs must be signed, i.e. linked with'
p110
ssg93
S'()'
p111
sg95
S'<module>'
p112
sa(dp113
g72
S'/home/www-data/web2py/gluon/globals.py'
p114
sg74
(dp115
S'self'
p116
S'undefined'
p117
sS'f'
S'<function modifyreleasegrouprating>'
p118
ssg80
I194
sg81
(dp119
I192
S"        self.delimiters = ('{{', '}}')"
p120
sI193
S'        self._vars = None'
p121
sI194
S'        self._caller = lambda f: f()'
p122
sI195
S'        self._view_environment = None'
p123
sI196
S'        self._custom_commit = None'
p124
sI197
S'        self._custom_rollback = None'
p125
sI198
S''
sI189
S'        self.menu = []             # used by the default view layout'
p126
sI190
S'        self.files = []            # used by web2py_ajax.html'
p127
sI191
S'        self.generic_patterns = []  # patterns to allow generic views'
p128
ssg93
S'(f=<function modifyreleasegrouprating>)'
p129
sg95
S'<lambda>'
p130
sa(dp131
g72
S'/home/www-data/web2py/applications/musicbrainz/controllers/default.py'
p132
sg74
(dp133
S'global db'
p134
S'<DAL uri="postgres://musicbrainz:******@localhost/musicbrainz_db">'
p135
sS'db.executesql'
p136
S'<bound method DAL.executesql of <DAL uri="postgres://musicbrainz:******@localhost/musicbrainz_db">>'
p137
sS'score'
p138
S"'2'"
p139
sS'uid'
p140
S"'1'"
p141
sS'rgid'
p142
S"'331825'"
p143
ssg80
I289
sg81
(dp144
I288
S'\telse:'
p145
sI289
S'\t\tdb.executesql("update release_group_rating_local set rating = "+score+" where id = "+rgid+" and user_id = "+uid+";")'
p146
sI290
S'\treturn dict()'
p147
sI291
S''
sI292
S'########## EXPORT PLAYLIST TO CSV ############'
p148
sI293
S'def export():'
p149
sI284
S'\tuid = request.vars.uid'
p150
sI285
S'\tscore = request.vars.score'
p151
sI286
S'\tif not db.executesql("select * from release_group_rating_local where id = "+rgid+" and user_id = "+uid+";"):'
p152
sI287
S'\t\tdb.executesql("insert into release_group_rating_local values("+rgid+","+uid+","+score+");")'
p153
ssg93
S'()'
p154
sg95
S'modifyreleasegrouprating'
p155
sa(dp156
g72
S'/home/www-data/web2py/gluon/dal.py'
p157
sg74
(dp158
S'query'
p159
S"'update release_group_rating_local set rating = 2 where id = 331825 and user_id = 1;'"
p160
sS'adapter'
p161
S'<gluon.dal.PostgreSQLAdapter object>'
p162
sS'adapter.execute'
p163
S'<bound method PostgreSQLAdapter.execute of <gluon.dal.PostgreSQLAdapter object>>'
p164
ssg80
I7936
sg81
(dp165
I7936
S'            adapter.execute(query)'
p166
sI7937
S'        if as_dict:'
p167
sI7938
S"            if not hasattr(adapter.cursor,'description'):"
p168
sI7939
S'                raise RuntimeError("database does not support executesql(...,as_dict=True)")'
p169
sI7940
S'            # Non-DAL legacy db query, converts cursor results to dict.'
p170
sI7931
S'        """'
p171
sI7932
S'        adapter = self._adapter'
p172
sI7933
S'        if placeholders:'
p173
sI7934
S'            adapter.execute(query, placeholders)'
p174
sI7935
S'        else:'
p175
ssg93
S'(self=<DAL uri="postgres://musicbrainz:******@localhost/musicbrainz_db">, query=\'update release_group_rating_local set rating = 2 where id = 331825 and user_id = 1;\', placeholders=None, as_dict=False, fields=None, colnames=None)'
p176
sg95
S'executesql'
p177
sa(dp178
g72
S'/home/www-data/web2py/gluon/dal.py'
p179
sg74
(dp180
S'a'
S"('update release_group_rating_local set rating = 2 where id = 331825 and user_id = 1;',)"
p181
sS'self'
p182
S'<gluon.dal.PostgreSQLAdapter object>'
p183
sS'b'
S'{}'
p184
sS'self.log_execute'
p185
S'<bound method PostgreSQLAdapter.log_execute of <gluon.dal.PostgreSQLAdapter object>>'
p186
ssg80
I1768
sg81
(dp187
I1763
S'        self.db._timings.append((command,time.time()-t0))'
p188
sI1764
S'        del self.db._timings[:-TIMINGSSIZE]'
p189
sI1765
S'        return ret'
p190
sI1766
S''
sI1767
S'    def execute(self, *a, **b):'
p191
sI1768
S'        return self.log_execute(*a, **b)'
p192
sI1769
S''
sI1770
S'    def represent(self, obj, fieldtype):'
p193
sI1771
S'        field_is_type = fieldtype.startswith'
p194
sI1772
S'        if isinstance(obj, CALLABLETYPES):'
p195
ssg93
S"(self=<gluon.dal.PostgreSQLAdapter object>, *a=('update release_group_rating_local set rating = 2 where id = 331825 and user_id = 1;',), **b={})"
p196
sg95
S'execute'
p197
sa(dp198
g72
S'/home/www-data/web2py/gluon/dal.py'
p199
sg74
(dp200
S'a'
S"('update release_group_rating_local set rating = 2 where id = 331825 and user_id = 1;',)"
p201
sS'b'
g184
sS'self'
p202
S'<gluon.dal.PostgreSQLAdapter object>'
p203
sS'ret'
p204
g117
sS'self.cursor'
p205
S'<cursor object at 0xaba833ec; closed: 0>'
p206
sS'self.cursor.execute'
p207
S'<built-in method execute of psycopg2._psycopg.cursor object>'
p208
ssg80
I1762
sg81
(dp209
I1760
S'        self.db._lastsql = command'
p210
sI1761
S'        t0 = time.time()'
p211
sI1762
S'        ret = self.cursor.execute(*a, **b)'
p212
sI1763
S'        self.db._timings.append((command,time.time()-t0))'
p213
sI1764
S'        del self.db._timings[:-TIMINGSSIZE]'
p214
sI1765
S'        return ret'
p215
sI1766
S''
sI1757
S'        command = a[0]'
p216
sI1758
S'        if self.db._debug:'
p217
sI1759
S"            LOGGER.debug('SQL: %s' % command)"
p218
ssg93
S"(self=<gluon.dal.PostgreSQLAdapter object>, *a=('update release_group_rating_local set rating = 2 where id = 331825 and user_id = 1;',), **b={})"
p219
sg95
S'log_execute'
p220
sasS'pyver'
p221
S'Python 2.7.3: /usr/bin/python (prefix: /usr)'
p222
sS'session'
p223
g67
(S's\xf3\x07\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top">auth</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">expiration</td><td valign="top">:</td><td><div>2592000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">hmac_key</td><td valign="top">:</td><td><div>738314b6-3cc1-45e3-b666-f01245537c44</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">last_visit</td><td valign="top">:</td><td><div>datetime.datetime(2013, 4, 25, 11, 20, 30, 805472)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">remember</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">user</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">email</td><td valign="top">:</td><td><div>devashishrocker@gmail.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">first_name</td><td valign="top">:</td><td><div>Devashish</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">id</td><td valign="top">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">last_name</td><td valign="top">:</td><td><div>Sharma</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">registration_id</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">registration_key</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">reset_password_key</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">user_groups</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">1</td><td valign="top">:</td><td><div>user_1</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">flash</td><td valign="top">:</td><td><div>None</div></td></tr></table></div>'
tRp224
sS'etype'
p225
S"<class 'psycopg2.ProgrammingError'>"
p226
sS'date'
p227
S'Fri Apr 26 02:04:25 2013'
p228
sS'response'
p229
g67
(S's\xf9\x17\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top">body</td><td valign="top">:</td><td><div>&lt;cStringIO.StringO object at 0xaba86a60&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cookies</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">session_id_musicbrainz</td><td valign="top">:</td><td><div>127.0.0.1-cef46f10-7fe3-4161-8f04-f260945a4b1b<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div>2592000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">delimiters</td><td valign="top">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">files</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">flash</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">generic_patterns</td><td valign="top">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">google_analytics_id</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">headers</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">X-Powered-By</td><td valign="top">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">logo</td><td valign="top">:</td><td><div><a class="brand" href="/musicbrainz/default/index"><b>MusicBrainz</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">menu</td><td valign="top">:</td><td><div><table><tr><td><div><table><tr><td><div>Search</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/musicbrainz/default/index</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Playlists</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/musicbrainz/default/playlist</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">meta</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">author</td><td valign="top">:</td><td><div>Devashish Tyagi &lt;devashishrocker@gmail.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">description</td><td valign="top">:</td><td><div>An Application to explore musicbrainz database</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">generator</td><td valign="top">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">keywords</td><td valign="top">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">models_to_run</td><td valign="top">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/modifyreleasegrouprating/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">postprocessing</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_cookie_expires</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_data_name</td><td valign="top">:</td><td><div>session_data_musicbrainz</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_file</td><td valign="top">:</td><td><div>&lt;open file &#x27;/home/www-data/web2py/applications/musicbrainz/sessions/127.0.0.1-cef46f10-7fe3-4161-8f04-f260945a4b1b&#x27;, mode &#x27;rb+&#x27; at 0xaba68bd0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_filename</td><td valign="top">:</td><td><div>/home/www-data/web2py/applications/musicbrainz/sessions/127.0.0.1-cef46f10-7fe3-4161-8f04-f260945a4b1b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id</td><td valign="top">:</td><td><div>127.0.0.1-cef46f10-7fe3-4161-8f04-f260945a4b1b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id_name</td><td valign="top">:</td><td><div>session_id_musicbrainz</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_locked</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_new</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_storage_type</td><td valign="top">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">status</td><td valign="top">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">subtitle</td><td valign="top">:</td><td><div>Discover Music</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">title</td><td valign="top">:</td><td><div>Musicbrainz</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">view</td><td valign="top">:</td><td><div>default/modifyreleasegrouprating.html</div></td></tr></table></div>'
tRp230
sS'locals'
p231
(dp232
S'a'
S"('update release_group_rating_local set rating = 2 where id = 331825 and user_id = 1;',)"
p233
sS'self'
p234
S'<gluon.dal.PostgreSQLAdapter object>'
p235
sS'b'
g184
sS'command'
p236
S"'update release_group_rating_local set rating = 2 where id = 331825 and user_id = 1;'"
p237
sS't0'
p238
S'1366922065.02182'
p239
sssS'traceback'
p240
S'Traceback (most recent call last):\n  File "/home/www-data/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/www-data/web2py/applications/musicbrainz/controllers/default.py", line 358, in <module>\n  File "/home/www-data/web2py/gluon/globals.py", line 194, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/www-data/web2py/applications/musicbrainz/controllers/default.py", line 289, in modifyreleasegrouprating\n    db.executesql("update release_group_rating_local set rating = "+score+" where id = "+rgid+" and user_id = "+uid+";")\n  File "/home/www-data/web2py/gluon/dal.py", line 7936, in executesql\n    adapter.execute(query)\n  File "/home/www-data/web2py/gluon/dal.py", line 1768, in execute\n    return self.log_execute(*a, **b)\n  File "/home/www-data/web2py/gluon/dal.py", line 1762, in log_execute\n    ret = self.cursor.execute(*a, **b)\nProgrammingError: column "rating" does not exist\nLINE 1: ...here id = (select id from top_release_group where rating = (...\n                                                             ^\nQUERY:  delete from top_release_group where id = (select id from top_release_group where rating = (select min(rating) from top_release_group) limit 1)\nand new.rating > (select min(rating) from top_release_group)\nCONTEXT:  PL/pgSQL function "func3" line 3 at SQL statement\nSQL statement "update release_group_rating_global\nset rating = rating + new.rating - old.rating\nwhere id = new.id"\nPL/pgSQL function "func2" line 3 at SQL statement\n\n'
p241
s.